Optimize sql queries with Django:

1. select_related()
Use this for ForeignKey and OneToOne fields to reduce the number 
of queries by performing a SQL join.
Example:
# Efficiently fetch related author with each book
books = Book.objects.select_related('author')

2. prefetch_related()
Use this for ManyToMany and reverse ForeignKey relationships. 
It performs separate queries and combines them in Python.
Example:
# Prefetch genres for each book in a single additional query
books = Book.objects.prefetch_related('genres')

3. only() and defer()
Use these to load only the fields you need, avoiding large or unnecessary fields until accessed.
Example:
# Load only title and author; defer other fields
books = Book.objects.only('title', 'author')
