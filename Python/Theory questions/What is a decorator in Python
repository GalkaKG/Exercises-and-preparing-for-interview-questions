What is a decorator in Python?

A decorator is a special type of function that
can modify the behavior of another function or class.
Decorators are often used to add functionality to
functions or classes without modifying their original code.

Декораторът е специален вид функция, 
която може да модифицира поведението на друга функция или клас. 
Декораторите се използват често,
за да добавят функционалност към функции или класове, 
без да променят техния оригинален код.

Here's example:
# Simulate a user authentication mechanism
def is_user_logged_in():
    return True  # For simplicity, always return True

# Define a decorator function for checking user authentication
def login_required(func):
    def wrapper():
        if is_user_logged_in():
            print("User is logged in. Access granted.")
            func()
        else:
            print("User is not logged in. Access denied.")
    return wrapper

# Apply the decorator to a function
@login_required
def restricted_function():
    print("This function is restricted to logged-in users.")

# Call the decorated function
restricted_function()
